{"version":3,"sources":["servises/FetchAPI.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/Loader/Loader.js","components/Button/Button.js","App.js","index.js"],"names":["api","imagesFetch","imageName","page","fetch","then","req","ok","json","Promise","reject","Error","Searchbar","onSubmit","useState","nameImage","setNameImage","keySearch","shortid","generate","className","e","preventDefault","trim","toast","error","type","id","autoComplete","autoFocus","placeholder","name","value","onChange","currentTarget","toLowerCase","ImageGalleryItem","webformatURL","tags","largeImageURL","onClick","src","alt","ImageGallery","arrayImages","map","Modal","onClose","children","useEffect","window","addEventListener","exitModal","removeEventListener","code","modalRoot","document","querySelector","createPortal","LoaderFunc","color","height","width","Button","App","imagesArray","setImagesArray","loading","setLoading","selectedImage","setSelectedImage","setPage","showModal","setShowModal","setError","searchImagesFetch","Api","imagesArrayFetch","checkNewFetchImagesArray","hits","catch","finally","prevState","reset","length","currentImage","autoClose","setTimeout","scrollTo","top","documentElement","scrollHeight","behavior","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e912ed8e.chunk.js","sourcesContent":["function imagesFetch(imageName, page) {\r\n    const KEY = \"key=21886908-2dadc690508cf849d5de61581\";\r\n    const LINK = \"https://pixabay.com/api/\";\r\n\r\n    return fetch(\r\n        `${LINK}?${KEY}&q=${imageName}&page=${page}&image_type=photo&orientation=horizontal&per_page=12`\r\n    ).then((req) => {\r\n        if (req.ok) {\r\n            return req.json();\r\n        }\r\n\r\n        return Promise.reject(new Error(\"Don't have image\"));\r\n    });\r\n}\r\n\r\nconst api = {\r\n    imagesFetch,\r\n};\r\n\r\nexport default api;","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport \"../Styles/styles.css\";\r\n\r\nexport default function Searchbar ({onSubmit}) {\r\n  const [nameImage, setNameImage] = useState(\"\");\r\n\r\n  const onValueInput = e => {\r\n    setNameImage(e.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const onSubmitFetch = e => {\r\n    e.preventDefault();\r\n\r\n    if (nameImage.trim() === \"\") {\r\n      toast.error(\"Input image name!!\");\r\n      return;\r\n    }\r\n\r\n    onSubmit(nameImage.trim());\r\n    setNameImage(\"\");\r\n  };\r\n\r\n    const keySearch = shortid.generate();\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={onSubmitFetch}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n          <input\r\n            id={keySearch}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            name=\"name\"\r\n            value={nameImage}\r\n            onChange={onValueInput}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n}","import React from \"react\";\r\n\r\nimport \"../Styles/styles.css\";\r\n\r\nexport default function ImageGalleryItem({\r\n  webformatURL,\r\n  tags,\r\n  largeImageURL,\r\n  onClick,\r\n}) {\r\n  return (\r\n    <li\r\n      onClick={() => onClick(largeImageURL, tags)}\r\n      className=\"ImageGalleryItem\"\r\n    >\r\n      <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n}","import React from \"react\";\r\n\r\nimport \"../Styles/styles.css\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\n\r\nexport default function ImageGallery({ arrayImages, onSubmit }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {arrayImages.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          webformatURL={webformatURL}\r\n          tags={tags}\r\n          largeImageURL={largeImageURL}\r\n          onClick={onSubmit}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nimport \"../Styles/styles.css\";\r\n\r\nexport default function Modal ({onClose, children}) {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", exitModal);\r\n    return () => window.removeEventListener(\"keydown\", exitModal);\r\n  }, []);\r\n\r\n  const exitModal = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      onClose();\r\n    }\r\n  };\r\n    const modalRoot = document.querySelector(\"#modal-root\");\r\n\r\n    return createPortal(\r\n      <div className=\"Overlay\">\r\n        <div className=\"Modal\">{children}</div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n}","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport \"../Styles/styles.css\";\r\n\r\nexport default function LoaderFunc() {\r\n  return (\r\n    <div className=\"loader\">\r\n      <Loader type=\"BallTriangle\" color=\"#00BFFF\" height={200} width={200} />\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\n\r\nimport \"../Styles/styles.css\";\r\n\r\nfunction Button({ children, onClick }) {\r\n  return (\r\n    <div className=\"containerBtn-loadMore\">\r\n      <button className=\"Button\" onClick={onClick}>\r\n        {children}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default Button;","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport Api from \"./servises/FetchAPI\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport ImageGalleryItem from \"./components/ImageGallery/ImageGallery\";\nimport Modal from \"./components/Modal/Modal\";\nimport Loader from \"./components/Loader/Loader\";\nimport Button from \"./components/Button/Button\";\nimport \"../src/styles/styles.css\";\n\nexport default function App () {\n  const [nameImage, setNameImage] = useState(\"\");\n  const [imagesArray, setImagesArray] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [page, setPage] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (nameImage === \"\") {\n      return;\n    }\n    searchImagesFetch();\n  }, [nameImage]);\n\n\n  const searchImagesFetch = () => {\n    setLoading(true);\n\n    Api.imagesFetch(nameImage, page, imagesArray)\n      .then((imagesArrayFetch) =>\n        checkNewFetchImagesArray(imagesArrayFetch.hits)\n      )\n      .catch((error) => setError(error))\n      .finally(() => setLoading(false),\n        setPage((prevState)=>prevState +1)\n      );\n  };\n\n  const checkNewFetchImagesArray = (imagesArrayFetch) => {\n    imagesArrayFetch === []\n      ? setImagesArray(imagesArrayFetch)\n      : setImagesArray((prevState) => [...prevState, ...imagesArrayFetch]);\n  };\n\n  const togleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const isHandleFormSubmit = (nameImage) => {\n    reset();\n\n    setNameImage(nameImage);\n  };\n\n  const reset = () => {\n    setPage(1);\n    setImagesArray([]);\n  }\n\n  const isCurrentImage = (currentImage, tags) => {\n    setSelectedImage([currentImage, tags]);\n    setShowModal(true);\n  };\n\n  const scrollGallery = () => {\n    setTimeout(() => {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }, 1000);\n  };\n\n  const onClickLoadMore = () => {\n    searchImagesFetch();\n    scrollGallery();\n  };\n \n    return (\n      <>\n        <Searchbar onSubmit={isHandleFormSubmit} />\n\n        {imagesArray.length === 0 && (\n          <div className=\"container-paragraphInfo\">\n            <p className=\"paragraphInfo\">\n              Images with name: {`${nameImage}`} no there, try another name.\n            </p>\n          </div>\n        )}\n\n        {imagesArray && (\n          <ImageGalleryItem arrayImages={imagesArray} onSubmit={isCurrentImage}/>\n        )}\n        {showModal && (\n          <Modal onClose={() => togleModal()}>\n            <img src={selectedImage[0]} alt={selectedImage[1]} />\n          </Modal>\n        )}\n\n        <ToastContainer autoClose={3000} />\n        {loading && <Loader />}\n\n        {imagesArray.length !== 0 && (\n          <Button onClick={onClickLoadMore}>Load more..</Button>\n        )}\n      </>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}